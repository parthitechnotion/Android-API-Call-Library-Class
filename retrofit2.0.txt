	
	Dependencies 
	//compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
   // compile 'com.squareup.okhttp:okhttp:2.0.0'
   
   
   --------------
   public class RestClient {

    public static Context context;
    private static ApiService REST_CLIENT;
    static {
        setupRestClient();
    }
    private RestClient() {
    }
    public static ApiService get() {
        return REST_CLIENT;
    }
    public static ApiService post() {
        return REST_CLIENT;
    }
    private static void setupRestClient() {
        HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();
        interceptor.setLevel(HttpLoggingInterceptor.Level.BODY);
        OkHttpClient client = new OkHttpClient.Builder().addInterceptor(interceptor).build();

        Retrofit retrofit = new Retrofit.Builder()
                .baseUrl(ApiService.BASEURL)
                .client(client)
                .addConverterFactory(GsonConverterFactory.create())
                .build();

        REST_CLIENT = retrofit.create(ApiService.class);
    }
}
------------------------

public interface ApiService {

    
    String BASEURL = "baseurl";

    @FormUrlEncoded
    @POST("api/appSignup")
    Call<RegBean> setRegistration(@Field("username") String username,@Field("salutation") String salutation, @Field("first_name") String first_name,
                                            @Field("last_name") String last_name, @Field("mobile_contact") String mobile_contact,
                                            @Field("job_title") String job_title, @Field("create_password") String create_password,
                                            @Field("confirm_password") String confirm_password, @Field("company_name") String company_name,
                                            @Field("company_email") String company_email, @Field("confirm_email") String confirm_email,
                                            @Field("company_contact_number") String company_contact_number, @Field("company_fax_number") String company_fax_number,
                                            @Field("point_of_contact") String point_of_contact, @Field("company_address_1") String company_address_1,
                                            @Field("company_address_2") String company_address_2, @Field("country_id") String country_id,
                                            @Field("state_id") String state_id, @Field("city_id") String city_id,
                                            @Field("postal_code") String postal_code, @Field("regions") String regions,
                                            @Field("industry_id") String industry_id, @Field("company_website") String company_website);

    @FormUrlEncoded
    @POST("api/app-signin")
    Call<SignInBean> setSignIn(@Field("email") String account_id, @Field("password") String password,@Field("sign_in_as") String sign_in_as);

    @POST("api/ApiForm3rdStepFields")
    Call<ThreeFormBean> getStepThreeForm(@Field("country_id")String CountryID);
	
	}
----------------------------------------

Call in activity 

------------

 Call<SignInBean> call = RestClient.post().setSignIn(edtUser.getText().toString().trim(),edtPassword.getText().toString().trim(),signInAs);
        call.enqueue(new Callback<SignInBean>() {
            @Override
            public void onResponse(Call<SignInBean> call, Response<SignInBean> response) {
              
                Log.e("Login Buyer : ",new Gson().toJson(response));

                if(response.body().getStatus().equals("true")){
                    if (response.isSuccessful()){
                        SharedObjects.UserData = response.body().getData();
                        Intent intent = new Intent(LoginActivity.this, HomeActivity.class);
                        startActivity(intent);
                        finish();
                    }
                }else{
                    Toast.makeText(LoginActivity.this,getString(R.string.something_went_wrong),Toast.LENGTH_LONG).show();
                }
            }

            @Override
            public void onFailure(CallSignInBean> call, Throwable t) {
                Log.e("Login Buyer : ","Failure");
                dismissProgressDialog();
                Toast.makeText(LoginActivity.this,getString(R.string.something_went_wrong),Toast.LENGTH_LONG).show();
            }
        });

		


